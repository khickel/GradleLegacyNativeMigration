rootProject.name = 'LegacyNativeExample'


includeBuild 'gradle/plugins/sonarqube-gradle-plugin'

include 'static_lib'
include 'subsystem_a:util_1'
if(org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem.isWindows()) {
    include 'subsystem_a:win_mfc_a'
}
include 'subsystem_b:server_1'


include 'legacy_installer'

// YAIM - Yet Another Installer Mechanism
include 'inst_three'

// old style self extracting zip based installers.
include 'zsfx_inst:zsfx_one'
include 'zsfx_inst:zsfx_two'

// To avoid every gradle file being named 'build.gradle', this bit of code
// will tell gradle to look for PROJNAME.gradle.
// from http://www.developerphil.com/renaming-your-gradle-build-files/
void rename_build_file_to_module_name(project) {
  project.buildFileName = "${project.name}.gradle"
    project.children.each { child -> rename_build_file_to_module_name(child) }
}


// Change the build.gradle filename for each subproject to use it's name instead of 'build.gradle'.
rootProject.children.each { subproject -> rename_build_file_to_module_name(subproject) }

plugins.withId('com.gradle.enterprise') {
  gradleEnterprise {
    buildScan {
      termsOfServiceUrl = "https://gradle.com/terms-of-service"

      if (System.getenv('CI')) {
        tag 'CI'
        termsOfServiceAgree = "yes"
      }
    }
  }
}

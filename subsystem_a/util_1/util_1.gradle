import static ConfigurationUtils.withDefaultApplicationConfiguration

plugins {
    id 'legacy-installable'
    id 'dev.nokee.native-application'
    id 'dev.nokee.cpp-language'
    id 'dev.nokee.c-language'
    id 'code-sign'
}

import dev.nokee.language.c.CHeaderSet
import dev.nokee.language.cpp.CppHeaderSet

// Set the project standard C++ compiler/linker options
application(withDefaultApplicationConfiguration())
application { app->

    // TODO(nokeedev): Support base name on the extension
//    // Set the executable filename
//    baseName = 'util_1'
    
    // Add *.cpp/*.c to the project
    sources {
        cpp { from(fileTree(dir: '.', include: '*.cpp')) }
        c { from(fileTree(dir: '.', include: '*.c')) }
        configureEach(CppHeaderSet) { from(projectDir) }
        configureEach(CHeaderSet) { from(projectDir) }
    }

    dependencies {
        implementation project(':static_lib')
    }
}

import glm.installer.pkgzip.PkgZipInstallerPackage

plugins {
    // https://github.com/dorongold/gradle-task-tree
    id "com.dorongold.task-tree" version "1.5"
    id 'usage'

    id 'glm.installation-manifest-base'
}

ext {
    // Code signing info
    codeSignCert = file("MySPC.pfx")
    codeSignPassword = "passwordx"

}

allprojects {
    apply plugin: 'glm.debug-lifecycle'
    apply plugin: 'glm.release-lifecycle'
    apply plugin: 'default-import'
    apply plugin: 'dev.nokee.visual-studio-ide'

    pluginManager.withPlugin('code-sign') {
        codeSign.certificateDirectory = rootProject.layout.buildDirectory.dir('Certs')
    }

    // Make sure that we know where to find unzipsfx.exe
    project.pluginManager.withPlugin('glm.installer-base') {
        installers.all {
            packages.withType(PkgZipInstallerPackage).all {
                ZSFX = providers.environmentVariable('UNZIPSFX_LOCATION').map { new File(it) }
                    .orElse(provider {
                            throw new GradleException(
                                "Please download unzipsfx from <https://sourceforge.net/projects/infozip/files/UnZip%206.x%20%28latest%29/UnZip%206.0/unzip60.zip/download>, unzip it, and set the environment variable 'UNZIPSFX_LOCATION'"
                            ) } )
            }
        }
    }
}

project(':zsfx_inst') {
    subprojects {
        ext.versionTextInputFilename = 'VERSION.txt.in'
        ext.releaseString = '1.1.00'
    }
}

installationManifests {
    base {
        from('LICENSE')
        from('README.md')
        from('VERSION.txt.in')
    }
}
